@model ChildCentre.ViewModels.RegisterModel
@{
    ViewBag.Title = "Add Staff Member";
}
<div class="row">
    <div class="admin-nav large-5 column">
        <h2><i class="icon-gears"></i>Supervisor Panel</h2>
        <ul>
            <li><a class="active" href="/Supervisor/StaffList/">Manage Staff Accounts</a></li>
            <li><a href="/Supervisor/GuardianList/">Manage Guardian Accounts</a></li>
            <li><a href="/Supervisor/ManagePrograms/">Manage Programs</a></li>
            <li><a href="/Supervisor/ReportList">Generate Report</a></li>
        </ul>
    </div>
    <div class="admin-content large-18 column">
        <h2><a href="/Supervisor/StaffList/">Manage Staff Accounts</a> / Add New Staff </h2>
        <div class="large-14 column" style="padding:1em">
            @using (Html.BeginForm("AddStaff", "Supervisor",
                FormMethod.Post, htmlAttributes: new { data_abide="" })) 
            {     
            @Html.AntiForgeryToken()
            @Html.ValidationSummary()	
            <label>Select Account Type
                <select name="staffType">
                  <option value="programworker">Program Worker</option>
                  <option value="supervisor">Supervisor</option>
                </select>
            </label>
			<div>
                <label>@Html.DisplayNameFor(m => m.UserName)<small> required</small></label>
                @Html.TextBoxFor(m => m.UserName, new { required = "", pattern="alpha_numeric",maxlength="15" })
                <small class="error">Required field. Only letters and numbers & max of 15 characters</small>
            </div>           
			<div class="row">
                <div class="large-12 column">
                    <label>@Html.DisplayNameFor(m => m.Password)<small> required</small></label>
                    @Html.PasswordFor(m => m.Password, new { required = "", pattern=".{6,}" })
                    <small class="error">Minimum of 6 characters</small>
                </div>
				<div class="large-12 column">
                    <label>@Html.DisplayNameFor(m => m.ConfirmPassword)<small> required</small></label>
                    @Html.PasswordFor(m => m.ConfirmPassword, new { required = "", data_equalto="Password" })
                    <small class="error">Passwords do not match</small>
                </div>
			</div>
            <div>
                <label>@Html.DisplayNameFor(m => m.Email)<small> required</small></label>
                @Html.TextBoxFor(m => m.Email, new { required = "", pattern="email"  })
                <small class="error">Enter a correct email</small>
            </div>
            <h3>Personal Information</h3>
			<div>
                <label>@Html.DisplayNameFor(m => m.GivenName)<small> required</small></label>
                @Html.TextBoxFor(m => m.GivenName, new { required = "", pattern="alpha", maxlength="20" })
                <small class="error">Required field. Only letters, max of 20 characters</small>
            </div>  
			<div>
                <label>@Html.DisplayNameFor(m => m.LastName)<small> required</small></label>
                @Html.TextBoxFor(m => m.LastName, new { required = "", pattern="alpha", maxlength="20" })
                <small class="error">Required field. Only letters, max of 20 characters</small>
            </div>
            <div>
				@Html.LabelFor(m => m.Address.StreetName)
                @Html.TextBoxFor(m => m.Address.StreetName, new { pattern="[a-zA-Z0-9 ]+" })
                <small class="error">Only letters and numbers</small>
            </div>
			<div class="row">
				<div class="large-12 column">
					@Html.LabelFor(m => m.Address.City)
                    @Html.TextBoxFor(m => m.Address.City, new { pattern="alpha" })
                    <small class="error">Only letters and numbers</small>
				</div>
				<div class="large-12 column">
					@Html.LabelFor(m => m.Address.PostalCode)
                    @Html.TextBoxFor(m => m.Address.PostalCode, new { pattern="alpha_numeric" })
                    <small class="error">Only letters and numbers</small>
				</div>
			</div>
			<div class="row">
				<div class="large-12 column">
					<label>@Html.DisplayNameFor(m => m.PrimaryPhone)<small> required</small></label>
                    @Html.TextBoxFor(m => m.PrimaryPhone, new { required="", pattern = "integer", maxlength="10" })
                    <small class="error">Enter a valid number</small>
				</div>
				<div class="large-12 column">
                    <label>@Html.DisplayNameFor(m => m.SecondaryPhone)</label>
                    @Html.TextBoxFor(m => m.SecondaryPhone, new { pattern = "integer", maxlength="10" })
                    <small class="error">Enter a valid phone number</small>
				</div>
			</div>
            <a href="/Supervisor/StaffList" class="button tiny secondary right">Cancel</a>
            <input type="submit" class="button tiny right" value="Submit" />
            }
		</div>
	</div>
</div>


